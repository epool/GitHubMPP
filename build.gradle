// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    ext.kotlin_version = '1.3.31'
    ext.ktor_version = '1.2.0-rc2'
    ext.kotlinx_coroutines_version = '1.2.1'
    ext.kotlinx_serialization_version = '0.11.0'
    repositories {
        maven { url 'https://dl.bintray.com/jetbrains/kotlin-native-dependencies/' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-native-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath("org.jetbrains.kotlin:kotlin-frontend-plugin:0.0.45")
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        maven { url 'https://dl.bintray.com/kotlin/kotlin-js-wrappers' }
        maven { url "https://dl.bintray.com/soywiz/soywiz" }
        google()
        jcenter()
    }
    // TODO remove once https://github.com/Kotlin/kotlin-frontend-plugin/issues/141 is fixed
    plugins.whenPluginAdded { plugin ->
        if (plugin.class.name == 'org.jetbrains.kotlin.gradle.frontend.FrontendPlugin') {
            def fixTask = tasks.register('webpack-config-fix') {
                it.doLast { file('webpack.config.d').mkdir() }
            }
            afterEvaluate {
                tasks.named('webpack-config').configure {
                    it.dependsOn(fixTask)
                }
            }
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

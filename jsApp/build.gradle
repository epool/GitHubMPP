apply plugin: 'kotlin2js'
apply plugin: 'org.jetbrains.kotlin.frontend'
apply plugin: 'kotlin-dce-js'

dependencies {
    compile("org.jetbrains.kotlin:kotlin-stdlib-js:$kotlin_version")
    compile("org.jetbrains.kotlinx:kotlinx-html-js:0.6.12")
    compile("org.jetbrains:kotlin-react:16.6.0-pre.70-kotlin-1.3.21")
    compile("org.jetbrains:kotlin-react-dom:16.6.0-pre.70-kotlin-1.3.21")
    compile(project(":shared"))
}

compileKotlin2Js {
//    kotlinOptions.outputFile = "$project.buildDir.path/js/${project.name}.js"
    kotlinOptions.moduleKind = "commonjs"
    kotlinOptions.main = "call"
    kotlinOptions.sourceMap = true
    kotlinOptions.sourceMapEmbedSources = "always"
}

kotlinFrontend {
    downloadNodeJsVersion = "latest"

    npm {
        dependency("kotlinx-html-js")
        dependency("react")
        dependency("react-dom")
        dependency("material-components-web")
        // Workaround for https://github.com/ktorio/ktor/issues/961
        dependency("text-encoding")
        dependency("bufferutil")
        dependency("utf-8-validate")
        dependency("fs")
        devDependency("file-loader")
        devDependency("extract-loader")
        devDependency("css-loader")
        devDependency("postcss-loader")
        devDependency("sass-loader")
        devDependency("node-sass")
        devDependency("autoprefixer")
    }

    webpackBundle {
        bundleName = "main"
        sourceMapEnabled = true  // enable/disable source maps
        contentPath = file("${project.projectDir}/src/main/web/")
        // a file that represents a directory to be served by dev server)
        publicPath = "/"  // web prefix
        port = 8088   // dev server port
        proxyUrl = "" // URL to be proxied, useful to proxy backend webserver
        stats = "errors-only"  // log level
    }
}